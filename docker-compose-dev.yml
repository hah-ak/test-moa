version: "3.8"
services:
  api:
    container_name: myApp_api

    build:
      context: .
      dockerfile: Dockerfile-api
    ports:
      - "8083:8083"
    networks:
      - myApp-network
    depends_on:
      mysql:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - myApp-service-volume:/home/service_files
  zookeeper:
    container_name: myApp_zookeeper
    build:
      context: .
      dockerfile: Dockerfile-zookeeper
    ports:
      - "2181:2181"
    volumes:
      - myApp-zookeeper-volume:/bitnami/zookeeper
  kafka:
    container_name : myApp_kafka
    build:
      context: .
      dockerfile: Dockerfile-kafka
    ports :
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=myApp_zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_started
    volumes:
      - myApp-kafka-volume:/bitnami/kafka
  redis:
    container_name: myApp_redis
    build: ./domain-modules/secret-resources/dockerfiles/redis
    ports:
      - "6379:6379"
    networks:
      - myApp-network
    volumes:
      - myApp-redis-volume:/data
  mysql:
    container_name: myApp_mysql
    build: ./domain-modules/secret-resources/dockerfiles/mysql
    ports:
      - "3306:3306"
    networks:
      - myApp-network
    volumes:
      - myApp-mysql-volume:/var/lib/mysql
#  mail-server:
#    build: ./domain-modules/secret-resources/dockerfiles/mail_server
networks:
  myApp-network:
    external: true
volumes:
  myApp-service-volume:
    external: true
  myApp-redis-volume:
    external: true
  myApp-mysql-volume:
    external: true
  myApp-kafka-volume:
    external: true
  myApp-zookeeper-volume:
    external: true
